#!/usr/bin/env zsh

# Set the base and typically useful options
emulate -LR zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops rcquotes

# Run as script? ZSH_SCRIPT is a Zsh 5.3 addition
if [[ $0 != .fzf-append-left-buffer || -n $ZSH_SCRIPT ]]; then
  # Handle $0 according to the Zsh Plugin Standard:
  # http://zdharma.org/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html
  0=${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}
  0=${${(M)0##/*}:-$PWD/$0}

  # Such global variable is expected to be typeset'd -g in the plugin.zsh
  # file. Here it's restored in case of the function being run as a script.
  typeset -gA Plugins
  Plugins[ZSH_FZF_DIR]=${0:h}

  # In case of the script using other scripts from the plugin, either set up
  # $fpath and autoload, or add the directory to $PATH.
  fpath+=( $Plugins[ZSH_FZF_DIR] )
  autoload -Uz .fzf-redraw-prompt

  zle -N fzf-redraw-prompt .fzf-redraw-prompt
fi

local ret

LBUFFER="${LBUFFER%% #} ${@%% #}"
ret=$?

zle fzf-redraw-prompt

return ret
