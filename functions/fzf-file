#!/usr/bin/env zsh

# Set the base and typically useful options
emulate -LR zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops rcquotes kshglob

# Run as script? ZSH_SCRIPT is a Zsh 5.3 addition
if [[ $0 != fzf-file || -n $ZSH_SCRIPT ]]; then
  # Handle $0 according to the Zsh Plugin Standard:
  # http://zdharma.org/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html
  0=${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}
  0=${${(M)0##/*}:-$PWD/$0}

  # Such global variable is expected to be typeset'd -g in the plugin.zsh
  # file. Here it's restored in case of the function being run as a script.
  typeset -gA Plugins
  Plugins[ZSH_FZF_DIR]=${0:h}

  typeset -gAH _ZSH_FZF
  _ZSH_FZF[TRUTHY]="true|yes|on|1"

  # In case of the script using other scripts from the plugin, either set up
  # $fpath and autoload, or add the directory to $PATH.
  fpath+=( $Plugins[ZSH_FZF_DIR] )
  autoload -Uz .fzf-cmd .fzf-append-left-buffer

  typeset -gA ZSH_FZF
fi

function .file-multi-opts() {
if [[ ${ZSH_FZF[SELECT_MULTI_FILE]:-"1"} =~ ${_ZSH_FZF[TRUTHY]} ]]; then
    echo -n "-m"

    return 0
  fi

  return 0
}

function .fzf-opts() {
  local fzfopts preview previewopts

  fzfopts=${ZSH_FZF[FILE_DEFAULT_OPTS]:-${ZSH_FZF[DEFAULT_OPTS]:-"--reverse --border --height 40%"}}

  if [[ ${1} == 'preview' ]]; then
    fzfopts="${fzfopts//--height[[:space:]|=]*[[:digit:]]?(%)?[[:space:]]} --height 100%"
    preview="--preview=\"${ZSH_FZF[PREVIEW_CMD]:-'less'} {} ${ZSH_FZF[PREVIEW_CMD_OPTS]:-''}\""
    previewopts=${ZSH_FZF[PREVIEW_OPTS]:-"--preview-window=down:70%:hidden --bind=ctrl-p:toggle-preview --ansi"}
  fi

  echo -n ${fzfopts} ${preview} ${previewopts}

  return 0
}

function .file-select() {
  local findcmd fzfopts preview previewopts ret item

  findcmd=${ZSH_FZF[FIND_FILE_COMMAND]:-${FZF_DEFAULT_COMMAND:-"find -L . -mindepth 1 -type f | cut -b3-"}}
  fzfopts=${ZSH_FZF[FILE_DEFAULT_OPTS]:-${ZSH_FZF[DEFAULT_OPTS]:-"--reverse --border --height 40%"}}
  preview="--preview='${ZSH_FZF[PREVIEW_CMD]:-'less'} {} ${ZSH_FZF[PREVIEW_CMD_OPTS]}'"
  previewopts=${ZSH_FZF[PREVIEW_OPTS]:-"--preview-window=down:70%:hidden --bind=ctrl-p:toggle-preview"}

  eval ${findcmd} | eval $(.fzf-cmd) $(.fzf-opts ${1}) $(.file-multi-opts) | while read item; do
    if [[ -n ${item} ]]; then
      echo -n "${(q)item} "
    fi
  done

  ret=$?

  return ${ret}
}

local ret files

files=$(.file-select ${1})

ret=$?

if [[ -z ${files} ]]; then
  zle redisplay

  return ${ret}
fi

.fzf-append-left-buffer ${files}

return ${ret}

